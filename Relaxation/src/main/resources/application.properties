# port 번호
server.port=8087

# context-path 지정

redirect.server.ip = http://localhost:8087

server.servlet.context-path=/relax


# ViewResolver의 prefix, suffix를 변경
# /WEB-INF/views/viewName.jsp
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

# DataBase Connection Pool 설정
# HikariCP
# MySQL Driver
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# JDBC URL
spring.datasource.url=jdbc:mysql://project-db-cgi.smhrd.com:3307/RELAXATION
# DB 로그인 username
spring.datasource.username=RELAXATION
# 비밀번호
spring.datasource.password=940415

# JPA JDBC 프레임워크 설정
# 우리가 사용하는 DB에 대한 설정
# hibernate-core 라이브러리에서 MySQL 5.1 버전을 위한 클래스 경로를 복사해온 것
spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect

# DDL-auto : 처음에는 create로 두다가, 개발이 어느정도 되면 update로 수정
# create : 기존에 있던 테이블 drop하고 다시 생성
# update : 변경사항이 있을 때만, drop하고 다시 생성
spring.jpa.hibernate.ddl-auto=update

# 자동완성된 SQL 쿼리를 콘솔창에 출력
spring.jpa.show-sql=false

# 실제 입력한 값들을 sql에 집어넣어서 출력시키겠다.
spring.jpa.properties.hibernate.format_sql=true

# maxLifetime 값 조정 (30분설정 30 * 60 * 1000밀리초)
# 커넥션 관리와 리소스 사용을 효율적으로 관리하는데 도움이 된다고 함
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.max-lifetime=1800000


# 스포티파이
spring.security.oauth2.client.registration.spotify.client-id=e44fad3b6d69472cbdc79368785d09fe
spring.security.oauth2.client.registration.spotify.client-secret=4de5f72955334b5fa3408705e9ff475c
spring.security.oauth2.client.registration.spotify.scope=user-read-private,user-read-email,user-modify-playback-state,user-read-playback-position,user-library-read,streaming,user-read-playback-state,user-read-recently-played,playlist-read-private
spring.security.oauth2.client.registration.spotify.redirect-uri=http://localhost:8087/relax/spoCallback

spring.security.oauth2.client.provider.spotify.authorization-uri=https://accounts.spotify.com/authorize
spring.security.oauth2.client.provider.spotify.token-uri=https://accounts.spotify.com/api/token
spring.security.oauth2.client.provider.spotify.user-info-uri=https://api.spotify.com/v1/me
spring.security.oauth2.client.registration.spotify.authorization-grant-type=authorization_code


